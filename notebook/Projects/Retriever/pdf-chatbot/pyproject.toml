[tool.poetry]
name = "pdf-chatbot"
version = "0.1.0"
description = ""
authors = ["Chinedu Ezeofor <neidu@email.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10, <3.13"
boto3 = "1.26.122"
botocore = "1.29.122"
celery = "5.3.1"
click = "8.1.3"
flask = "2.3.1"
flask-sqlalchemy = "3.0.3"
flask-cors = "4.0.0"
langchain = "0.0.352"
openai = "1.6.1"
python-dotenv = "1.0.0"
werkzeug = "2.3.1"
invoke = "2.2.0"
qdrant-client = "1.7.0"
pypdf = "3.15.4"
watchdog = "3.0.0"
tiktoken = "0.5.2"
uuid = "1.30"
langfuse = "1.0.18"
backoff = "2.2.1"
redis = "5.0.0"
typeguard = "^4.1.5"
rich = "^13.7.0"
langchain-openai = "^0.0.2.post1"
pinecone-client = "2.2.2"


[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
ruff = "^0.2.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
mypy_path = ["./"]
python_version = "3.10"
show_error_context = true
ignore_missing_imports = true
warn_incomplete_stub = false
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_defs = false
warn_unused_configs = true

[tool.ruff]
# Set the maximum line length to 100.
line-length = 100
indent-width = 4

# Assume Python 3.10
target-version = "py310"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr", ".direnv", ".dockerignore", ".eggs", ".env", ".git",
    ".gitignore", ".git-rewrite",  ".hg", ".mypy_cache", ".nox",
    ".pants.d", ".pytype", ".ruff_cache", ".svn", ".tox", ".venv",
    "__pypackages__", "_build", "buck-out", "build", "dist", "env",
    "node_modules", "venv",
]

[tool.ruff.lint]
# Add the `line-too-long` rule to the enforced rule set.
extend-select = ["E501"]
select = [
    "I001", "ANN201", "ANN202", "S107", "PIE796", "T201", "PYI009",
    "PYI012", "PYI026", "RET505", "SIM115", "F401",
    ]
ignore = ["E741", "PT011", "PLR1722", "D419", "D101", "D100", "D107", "ANN401", "PLC0414"]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Pytest
[tool.pytest.ini_options]
addopts = "--strict-markers" # Ensure that the markers are defined
markers = [
            "integration: Run the integration tests.",
            "differential: Run the integration tests."
            ]
